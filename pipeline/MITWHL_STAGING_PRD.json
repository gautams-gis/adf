{
	"name": "MITWHL_STAGING_PRD",
	"properties": {
		"activities": [
			{
				"name": "Login",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Login_PRD",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "SetBearer",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Login",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Bearer",
					"value": {
						"value": "@concat('Bearer ',activity('Login').output.pipelineReturnValue.access_token)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "PerformQuery",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SetBearer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PerformQuery_PRD",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Query": {
							"value": "SELECT\n  \"MITWHL\".\"accountingEntity\",\n  \"MITWHL\".\"variationNumber\",\n  \"MITWHL\".\"timestamp\",\n  \"MITWHL\".\"deleted\",\n  \"MITWHL\".\"CONO\",\n  \"MITWHL\".\"WHLO\",\n  \"MITWHL\".\"WHNM\",\n  \"MITWHL\".\"DIVI\",\n  \"MITWHL\".\"FACI\",\n  \"MITWHL\".\"WHTY\",\n  \"MITWHL\".\"WHSY\",\n  \"MITWHL\".\"WHPL\",\n  \"MITWHL\".\"OREF\",\n  \"MITWHL\".\"PHNO\",\n  \"MITWHL\".\"COMA\",\n  \"MITWHL\".\"CUNO\",\n  \"MITWHL\".\"SUNO\",\n  \"MITWHL\".\"SDES\",\n  \"MITWHL\".\"SHNM\",\n  \"MITWHL\".\"PLIS\",\n  \"MITWHL\".\"CSCD\",\n  \"MITWHL\".\"ECAR\",\n  \"MITWHL\".\"VRNO\",\n  \"MITWHL\".\"LNCD\",\n  \"MITWHL\".\"CPWH\",\n  \"MITWHL\".\"AUAD\",\n  \"MITWHL\".\"ALWH\",\n  \"MITWHL\".\"ALAC\",\n  \"MITWHL\".\"RESP\",\n  \"MITWHL\".\"TWSL\",\n  \"MITWHL\".\"GEOC\",\n  \"MITWHL\".\"TAXC\",\n  \"MITWHL\".\"UNST\",\n  \"MITWHL\".\"TXID\",\n  \"MITWHL\".\"DTID\",\n  \"MITWHL\".\"AASQ\",\n  \"MITWHL\".\"DMF0\",\n  \"MITWHL\".\"DMF1\",\n  \"MITWHL\".\"DMF2\",\n  \"MITWHL\".\"DMF3\",\n  \"MITWHL\".\"DMF4\",\n  \"MITWHL\".\"DMF5\",\n  \"MITWHL\".\"DMF6\",\n  \"MITWHL\".\"DMF7\",\n  \"MITWHL\".\"DMF8\",\n  \"MITWHL\".\"DMF9\",\n  \"MITWHL\".\"INUL\",\n  \"MITWHL\".\"EPUL\",\n  \"MITWHL\".\"EXDL\",\n  \"MITWHL\".\"PIDL\",\n  \"MITWHL\".\"ALWQ\",\n  \"MITWHL\".\"ITDL\",\n  \"MITWHL\".\"CDYN\",\n  \"MITWHL\".\"PATF\",\n  \"MITWHL\".\"PAHF\",\n  \"MITWHL\".\"PMTF\",\n  \"MITWHL\".\"PMHF\",\n  \"MITWHL\".\"DDLO\",\n  \"MITWHL\".\"CDPD\",\n  \"MITWHL\".\"CDPM\",\n  \"MITWHL\".\"CALV\",\n  \"MITWHL\".\"ACGR\",\n  \"MITWHL\".\"NBID\",\n  \"MITWHL\".\"STOF\",\n  \"MITWHL\".\"ASOT\",\n  \"MITWHL\".\"DAAS\",\n  \"MITWHL\".\"LEAM\",\n  \"MITWHL\".\"DMFC\",\n  \"MITWHL\".\"LSPM\",\n  \"MITWHL\".\"RSTN\",\n  \"MITWHL\".\"RGDT\",\n  \"MITWHL\".\"RGTM\",\n  \"MITWHL\".\"LMDT\",\n  \"MITWHL\".\"CHNO\",\n  \"MITWHL\".\"CHID\",\n  (CAST(\"LMTS\" AS timestamp)) AS \"LMTS\",\n  \"MITWHL\".\"CPTE\",\n  \"MITWHL\".\"SCED\",\n  \"MITWHL\".\"GEOX\",\n  \"MITWHL\".\"GEOY\",\n  \"MITWHL\".\"GEOZ\",\n  \"MITWHL\".\"PRIO\",\n  \"MITWHL\".\"PWGR\",\n  \"MITWHL\".\"RDIL\",\n  \"MITWHL\".\"TCUW\",\n  \"MITWHL\".\"WOPC\",\n  \"MITWHL\".\"BLPM\",\n  \"MITWHL\".\"PORG\"\nFROM\n  \"MITWHL\"\nWHERE\n  (\"timestamp\" >= '@{pipeline().parameters.start_date}')\n  and\n  (\"timestamp\" <= '@{pipeline().parameters.end_date}')",
							"type": "Expression"
						},
						"BaseURL": {
							"value": "https://mingle-ionapi.inforcloudsuite.com/EMCO_PRD/DATAFABRIC/compass/v2/",
							"type": "Expression"
						},
						"BearerToken": {
							"value": "@variables('Bearer')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "UntilRecordCountReached",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "SetCurrentRow",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SetLimit",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "PerformQuery",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(int(variables('CurrentRow')), activity('PerformQuery').output.pipelineReturnValue.RowCount)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy MITWHL Data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"maxConcurrentConnections": 1,
										"requestMethod": "GET",
										"additionalHeaders": {
											"value": "Authorization: @{variables('Bearer')}\nAccept: text/csv",
											"type": "Expression"
										},
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzurePostgreSQLSink",
									"writeBatchSize": 1000000,
									"writeBatchTimeout": "00:30:00",
									"writeMethod": "CopyCommand"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Compass_MITWHL_DataSet_PRD",
									"type": "DatasetReference",
									"parameters": {
										"QueryId": {
											"value": "@activity('PerformQuery').output.pipelineReturnValue.QueryId",
											"type": "Expression"
										},
										"Limit": {
											"value": "@int(variables('Limit'))",
											"type": "Expression"
										},
										"Offset": {
											"value": "@int(variables('CurrentRow'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "MITWHL_ST",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "WriteCurrentRowVariable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "PerformMathOnCurrentRow",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "CurrentRow",
								"value": {
									"value": "@variables('TempCurrentRow')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "PerformMathOnCurrentRow",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy MITWHL Data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "TempCurrentRow",
								"value": {
									"value": "@string(add(int(variables('CurrentRow')), int(variables('Limit'))))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "FailUntilLoop",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "Copy MITWHL Data",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": "UnableToCopyData",
								"errorCode": "2"
							}
						}
					],
					"timeout": "2.02:00:00"
				}
			},
			{
				"name": "SetCurrentRow",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "CurrentRow",
					"value": "0"
				}
			},
			{
				"name": "SetLimit",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Limit",
					"value": "50000"
				}
			}
		],
		"parameters": {
			"start_date": {
				"type": "string"
			},
			"end_date": {
				"type": "string"
			}
		},
		"variables": {
			"Bearer": {
				"type": "String"
			},
			"CurrentRow": {
				"type": "String"
			},
			"Limit": {
				"type": "String"
			},
			"TempCurrentRow": {
				"type": "String"
			}
		},
		"folder": {
			"name": "PRD/Tables_PRD/Staging Pipeline PRD"
		},
		"annotations": [],
		"lastPublishTime": "2024-06-18T10:29:17Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}