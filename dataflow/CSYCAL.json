{
	"name": "CSYCAL",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSYCAL_ST",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CSYCAL_Dataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CONO as short,",
				"          DIVI as string,",
				"          YMD8 as integer,",
				"          UDF8 as integer,",
				"          YMD6 as integer,",
				"          UDF6 as integer,",
				"          DMY6 as integer,",
				"          MDY6 as integer,",
				"          YWD5 as integer,",
				"          CDNO as integer,",
				"          WDNO as integer,",
				"          BDNO as integer,",
				"          YDNO as integer,",
				"          WDPC as short,",
				"          BDAY as short,",
				"          BDAD as short,",
				"          DUAD as short,",
				"          CYP1 as integer,",
				"          CYP2 as integer,",
				"          CYP3 as integer,",
				"          CYP4 as integer,",
				"          CYP5 as integer,",
				"          GDAY as short,",
				"          GDNO as integer,",
				"          DDAY as short,",
				"          DDNO as integer,",
				"          PODY as short,",
				"          LMTS as long,",
				"          ADAE as short,",
				"          accountingEntity as string,",
				"          variationNumber as long,",
				"          timestamp as timestamp,",
				"          deleted as boolean,",
				"          archived as boolean",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CONO as short,",
				"          DIVI as string,",
				"          YMD8 as integer,",
				"          UDF8 as integer,",
				"          YMD6 as integer,",
				"          UDF6 as integer,",
				"          DMY6 as integer,",
				"          MDY6 as integer,",
				"          YWD5 as integer,",
				"          CDNO as integer,",
				"          WDNO as integer,",
				"          BDNO as integer,",
				"          YDNO as integer,",
				"          WDPC as short,",
				"          BDAY as short,",
				"          BDAD as short,",
				"          DUAD as short,",
				"          CYP1 as integer,",
				"          CYP2 as integer,",
				"          CYP3 as integer,",
				"          CYP4 as integer,",
				"          CYP5 as integer,",
				"          GDAY as short,",
				"          GDNO as integer,",
				"          DDAY as short,",
				"          DDNO as integer,",
				"          PODY as short,",
				"          LMTS as long,",
				"          ADAE as short,",
				"          accountingEntity as string,",
				"          variationNumber as long,",
				"          timestamp as timestamp,",
				"          deleted as boolean,",
				"          archived as boolean",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CONO','DIVI'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          CONO,",
				"          DIVI,",
				"          YMD8,",
				"          UDF8,",
				"          YMD6,",
				"          UDF6,",
				"          DMY6,",
				"          MDY6,",
				"          YWD5,",
				"          CDNO,",
				"          WDNO,",
				"          BDNO,",
				"          YDNO,",
				"          WDPC,",
				"          BDAY,",
				"          BDAD,",
				"          DUAD,",
				"          CYP1,",
				"          CYP2,",
				"          CYP3,",
				"          CYP4,",
				"          CYP5,",
				"          GDAY,",
				"          GDNO,",
				"          DDAY,",
				"          DDNO,",
				"          PODY,",
				"          LMTS,",
				"          ADAE,",
				"          accountingEntity,",
				"          variationNumber,",
				"          timestamp,",
				"          deleted,",
				"          archived",
				"     )) ~> sink1"
			]
		}
	}
}